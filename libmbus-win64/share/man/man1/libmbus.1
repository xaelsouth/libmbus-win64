.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LIBMBUS 1"
.TH LIBMBUS 1 "2017-04-07" "0.8.0" "libmbus"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
libmbus (utilities) \- support utilities to the libmbus. libmbus is an open
source M\-bus (Meter\-Bus) library. The Meter\-Bus is a standard for reading out
meter data from electricity meters, heat meters, gas meters, etc. The role
of the libmbus library is to decode/encode M\-bus data, and to handle 
the communication with M\-Bus devices.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBmbus-serial-switch-baudrate\fR [\-b \s-1BAUDRATE\s0] device address target-baudrate
.PP
\&\fBmbus-serial-scan\fR [\-d] [\-b \s-1BAUDRATE\s0] [\-r \s-1RETRIES\s0] device
.PP
\&\fBmbus-tcp-scan\fR [\-d] [\-r \s-1RETRIES\s0] host port
.PP
\&\fBmbus-serial-scan-secondary\fR [\-d] [\-b \s-1BAUDRATE\s0] device [address\-mask]
.PP
\&\fBmbus-tcp-scan-secondary\fR host port [address\-mask]
.PP
\&\fBmbus-serial-request-data\fR [\-d] [\-b \s-1BAUDRATE\s0] device mbus-address
.PP
\&\fBmbus-tcp-request-data\fR [\-d] host port mbus-address
.PP
\&\fBmbus-serial-request-data-multi-reply\fR [\-d] [\-b \s-1BAUDRATE\s0] [\-f \s-1FRAMES\s0] device mbus-address
.PP
\&\fBmbus-tcp-request-data-multi-reply\fR [\-d] [\-f \s-1FRAMES\s0] host port mbus-address
.PP
\&\fBmbus-serial-select-secondary\fR [\-b \s-1BAUDRATE\s0] device secondary-mbus-address
.PP
\&\fBmbus-tcp-select-secondary\fR host port secondary-mbus-address
.PP
\&\fBmbus-tcp-raw-send\fR [\-d] host port mbus-address [file]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBmbus-serial-switch-baudrate\fR \- attempts to switch the communication speed of
the MBus device.
.PP
\&\fBmbus-serial-scan\fR, \fBmbus-tcp-scan\fR \- sequentially scan for devices on MBus bus
using primary addresses.
.PP
\&\fBmbus-serial-scan-secondary\fR, \fBmbus-tcp-scan-secondary\fR  \- scan for devices on
MBus bus using secondary addresses. The scan is not sequential.
.PP
\&\fBmbus-serial-request-data\fR, \fBmbus-tcp-request-data\fR \- read data from given device.
Supports both primary and secondary address types.
.PP
\&\fBmbus-serial-request-data-multi-reply\fR, \fBmbus-tcp-request-data-multi-reply\fR \- read
data from given device supporting multi-telegram (default: up to 16 frames) reply. 
Can be also used for single telegram as mbus-serial-request-data or mbus-tcp-request-data.
Supports both primary and secondary address types.
.PP
\&\fBmbus-serial-select-secondary\fR, \fBmbus-tcp-select-secondary\fR \- perform single secondary
address select to check what device responds.
.PP
\&\fBmbus-tcp-raw-send\fR \- send a single raw hex frame to a MBus device.
.SH "OPTIONS"
.IX Header "OPTIONS"
There are following options/parameters:
.IP "\fB\-b\fR \fI\s-1BAUDRATE\s0\fR" 4
.IX Item "-b BAUDRATE"
For serial communication, use given \fI\s-1BAUDRATE\s0\fR (integer in Bd). If not used then
default baudrate of 9600 will be used.
libmbus supports following baud rates: 300, 600, 1200, 2400, 4800, 9600, 19200,
38400.
Note that your MBus gateway and/or MBus device will most likely support only
a subset of these. The most commonlu used/supported rates are probably 9600, 2400
and 300.
.IP "\fB\-r\fR \fI\s-1RETRIES\s0\fR" 4
.IX Item "-r RETRIES"
Maximum retransmissions. In case a MBus device doesn't reply to a request or
the response is erroneous, the MBus master can send a retransmissions.
.Sp
libmbus supports the following range of retransmission: 0 until 9
.IP "\fB\-f\fR \fI\s-1FRAMES\s0\fR" 4
.IX Item "-f FRAMES"
Maximum response frames.
.IP "\fB\-d\fR" 4
.IX Item "-d"
Enable debugging messages.
.IP "\fBdevice\fR" 4
.IX Item "device"
For serial communication, the serial device which represents the MBus (gateway).
Typically something like /dev/ttyS0, /dev/ttyUSB0, etc.
.IP "\fBhost\fR" 4
.IX Item "host"
For \s-1TCP\s0 communciation, the host which represents the MBus (gateway).
.IP "\fBport\fR" 4
.IX Item "port"
For \s-1TCP\s0 communciation, the port on the host which represents the MBus (gateway).
An integer between 0 and 65535.
.IP "\fBaddress\fR" 4
.IX Item "address"
MBus device primary address. An integer between 1 and 250.
.IP "\fBaddress-mask\fR" 4
.IX Item "address-mask"
Address mask for secondary address scan \- you can restrict the search by supplying
an optional address mask on the form '\s-1FFFFFFFFFFFFFFFF\s0' where F is a wildcard
character.
.IP "\fBmbus-address\fR" 4
.IX Item "mbus-address"
MBus device address. Could be a primary address or a secondary address (sixteen
digit hexadecimal number).
.Sp
The primary address should be an integer between 1 and 250 for addressing
individual devices. However the program does allow using any one byte number (i.e.
0 to 255) so that you can also use addresses reserved for physical or data link
layers management, secondary addressing, broadcasts, etc.
.IP "\fBsecondary-mbus-address\fR" 4
.IX Item "secondary-mbus-address"
MBus secondary address of the device. Sixteen digit hexadecimal number.
.IP "\fBtarget-baudrate\fR" 4
.IX Item "target-baudrate"
For serial communication, the baudrate to which the device should be switched.
.IP "\fBfile\fR" 4
.IX Item "file"
Path to an file with hex values.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Scan for MBus devices on the serial port:
.PP
.Vb 1
\&  mbus\-serial\-scan \-d \-b 2400 /dev/ttyS0
.Ve
.PP
Try to switch baud rate of a device on address 59 from 2400Bd to 9600Bd:
.PP
.Vb 1
\&  mbus\-serial\-switch\-baudrate \-b 2400 /dev/ttyUSB0 59 9600
.Ve
.PP
Readout a MBus device on address 59 at 2400Bd:
.PP
.Vb 1
\&  mbus\-serial\-request\-data\-multi\-reply \-b 2400 /dev/ttyS0 59
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
http://www.rscada.se/libmbus and http://www.m\-bus.com
.SH "AUTHORS"
.IX Header "AUTHORS"
See http://www.rscada.se/libmbus and https://github.com/rscada/libmbus
